llm:
    type: azure_openai_chat
    api_key: ${GRAPHRAG_API_KEY}
    api_base: ${GRAPHRAG_API_BASE}
    model: ${GRAPHRAG_LLM_MODEL}
    deployment_name: ${GRAPHRAG_LLM_DEPLOYMENT_NAME}
    api_version: ${GRAPHRAG_API_VERSION}
    tokens_per_minute: 120_000
    requests_per_minute: 720

embeddings: 
    llm:
        type: azure_openai_embedding
        model: ${GRAPHRAG_EMBEDDING_MODEL}
        deployment_name: ${GRAPHRAG_EMBEDDING_DEPLOYMENT_NAME}
        tokens_per_minute: 350_000
        requests_per_minute: 2_100

    vector_store:
      type: "qdrant"
      base:
        # url: "https://qdrant:6333"
        # port: 6333
        # api_key: ${QDRANT_API_KEY}
        # vector_size: 12345
        # https: true
        # no-url, in-memory mode
      
      entity_name_description: 
        title_column: "name"
        # id_column: "id"
        # overwrite: true
      # entity_name: ...
      # relationship_description: ...
      # community_report_full_content: ...
      # community_report_summary: ...
      # community_report_title: ...
      # document_raw_content: ...
      # text_unit_text: ...

input:
    type: text
    storage_type: blob
    connection_string: ${BLOB_STORAGE_CONNECTION_STRING}
    container_name: dulceazure
    base_dir: input

cache:
    type: blob
    connection_string: ${BLOB_STORAGE_CONNECTION_STRING}
    container_name: dulceazure
    base_dir: cache

storage:
    type: blob
    connection_string: ${BLOB_STORAGE_CONNECTION_STRING}
    container_name: dulceazure
    base_dir: output

reporting:
    type: blob
    connection_string: ${BLOB_STORAGE_CONNECTION_STRING}
    container_name: dulceazure
    base_dir: reports

chunks:
    overlap: 0
    size: 1200